- name: Run the equivalent of apt-get update.
  ansible.builtin.apt:
    update_cache: yes

- name: Installing required packages.
  ansible.builtin.apt:
    pkg:
      - python-is-python3
      - python3.10-venv
    state: present

- name: Create Python virtual environment
  ansible.builtin.shell:
    cmd: python3 -m venv /home/{{ ansible_user }}/ansible
    creates: /home/{{ ansible_user }}/ansible/bin/activate

- name: Add content from the template to the existing file
  ansible.builtin.blockinfile:
    path: /home/{{ ansible_user }}/.bashrc
    block: |
      {{ lookup('template', 'templates/ansible_bashrc_alias.j2') }}
    marker: " "
    create: yes

- name: Install specified virtualenv packages.
  ansible.builtin.pip:
    name:
      - pip
      - ansible
    state: latest
    virtualenv: /home/{{ ansible_user }}/ansible
    virtualenv_command: /usr/bin/python3 -m venv

- name: Load variables from vars/main/main.yml
  ansible.builtin.include_vars:
    file: "{{ role_path }}/vars/main.yml"

- name: Download mitogen package.
  ansible.builtin.get_url:
    url: "https://files.pythonhosted.org/packages/source/m/mitogen/{{ mitogen_package }}"
    dest: "/home/{{ ansible_user }}/ansible/{{ mitogen_package }}"
    mode: '0644' 

- name: Extract downloaded file.
  ansible.builtin.unarchive:
    src: "/home/{{ ansible_user }}/ansible/{{ mitogen_package }}"
    dest: "/home/{{ ansible_user }}/ansible/"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Add ansible config file
  ansible.builtin.template:
    src: templates/ansible_config_file.j2
    dest: /home/{{ ansible_user }}/.ansible.cfg

- name: Run the equivalent of apt-get update.
  ansible.builtin.apt:
    update_cache: yes

